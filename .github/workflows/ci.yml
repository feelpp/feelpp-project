name: CI

on: [push]

jobs:

  activate:
    runs-on: ubuntu-latest
    if: |
      github.repository == 'feelpp/feelpp-project' &&
      !startsWith(github.event.head_commit.message, 'Release ') &&
      !contains(github.event.head_commit.message, 'ci skip')
    steps:
    - run: echo ok go

  build_docs:
    needs: activate
    runs-on: ubuntu-latest
    name: Build, Install, Package documentation
    if: "!contains(github.event.head_commit.message, 'docs skip')"
    steps:
    - uses: actions/checkout@v2
    - 
      name: install
      run: |
        sudo apt -y update 
        sudo apt -yq install npm ython3-pandas python3-pip
    - name: Build
      run: echo "Hi!"

  build_code:
    needs: activate
    runs-on: ubuntu-latest
    name: Build, Install, Package code
    steps:
    - 
      uses: actions/checkout@v2
      with:
        lfs: true
        - 
      name: Update feelpp
      run: |
        sudo apt update
        sudo apt --reinstall install -y libfeelpp1 libfeelpp-dev feelpp-tools python3-feelpp python3-mpi4py
    - 
      name: Build MyProject
      run: |
        rm -rf build
        mkdir build && cd build
        CXX=clang++ ../configure -r --prefix=$PWD/install
        make -j5
        make install
    - 
      name: Check build
      run: |
        mpirun --bind-to core --mca btl vader,self -np 4 install/bin/feelpp_p_myapp 
      working-directory: build/
    - 
      name: Package
      run: |
        make package
      working-directory: build
    - name: Upload 
      uses: actions/upload-artifact@v2
      with:
        # Artifact name
        name: feelpp-project-artifacts
        # Directory containing files to upload
        path: build/assets/myproject-*

  check:
    needs: build_code
    runs-on: ubuntu-20.04
    name: Check Build, Install, Run
    steps:
    - name: Install feelpp
      uses: feelpp/action-install-feelpp@main
      with:
          repo: deb https://dl.bintray.com/feelpp/ubuntu focal latest
    - name: Download 
      uses: actions/download-artifact@v2
      with:
        # Artifact name
        name: feelpp-project-artifacts
        # Directory containing files to upload
        path: build/assets/
    - name: Display Artifact
      run: ls -R
      working-directory: build/assets
    - name: Install Project
      run: sudo dpkg -i build/assets/*.deb

  deliver:
    runs-on: ubuntu-20.04
    needs: check
    name: Docker Build, Tag, Push

    steps:
    - uses: actions/checkout@v2
      with:
        lfs: true
    
    - name: Download 
      uses: actions/download-artifact@v2
      with:
        # Artifact name
        name: feelpp-project-artifacts
        path: artifacts/
    -
      name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    -
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1        
    - 
      name: Login to GitHub Container Registry
      uses: docker/login-action@v1 
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.CR_PAT }}
    - 
      name: Build container image
      uses: docker/build-push-action@v2
      with: 
        context: artifacts
        repository: feelpp/feelpp-project
        tags: ghcr.io/feelpp/feelpp-project:latest
        file: ./Dockerfile
        push: true
        
