name: CI

on: [push]

jobs:
  activate:
    runs-on: ubuntu-latest
    if: |
      github.repository == 'feelpp/feelpp-project' &&
      !startsWith(github.event.head_commit.message, 'Release ') &&
      !contains(github.event.head_commit.message, 'ci skip')
    steps:
    - run: echo ok go
    

  build_docs:
    needs: activate
    runs-on: ubuntu-latest
    name: Build, Install, Package documentation
    if: "!contains(github.event.head_commit.message, 'docs skip')"
    steps:
    - uses: actions/checkout@v2.3.4
    - name: Install credentials
      run: echo https://$GITHUB_OAUTH:@github.com > $HOME/.git-credentials
      env:
        GITHUB_OAUTH: ${{ secrets.DOCS_GITHUB_KEY }}
    - name: Build
      run: |
        npm install
        npm run antora
      working-directory: docs
    - name: Deploy
      uses: JamesIves/github-pages-deploy-action@v4.3.0
      with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: gh-pages # The branch the action should deploy to.
          FOLDER: docs/public # The folder the action should deploy.


  build_code:
    needs: activate
    runs-on: self-hosted
    name: Build, Install, Package code
    if: "!contains(github.event.head_commit.message, 'code skip')"
    steps:
    - 
      uses: actions/checkout@v2.3.4
      with:
        lfs: true
    - 
      name: Install feelpp
      uses: feelpp/action-install-feelpp@v1.3
      with:
        dist: ubuntu
        flavor: focal
        install: libfeelpp1 feelpp-tools libfeelpp-dev libfeelpp-toolboxes1-all-dev feelpp-toolboxes
    - 
      name: Build MyProject
      run: |
        rm -rf build
        mkdir build && cd build
        CXX=clang++ cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=$PWD/install ..
        make -j5
        make install
    - 
      name: Check build
      run: |
        ctest 
      working-directory: build/
    - 
      name: Package
      run: |
        make package
      working-directory: build
    - name: Upload 
      uses: actions/upload-artifact@v2
      with:
        # Artifact name
        name: feelpp-project-artifacts
        # Directory containing files to upload
        path: build/assets/myproject-*

  check:
    needs: build_code
    runs-on: ubuntu-20.04
    name: Check Build, Install, Run
    steps:
    - name: Install feelpp
      uses: feelpp/action-install-feelpp@v1.1
      with:
        dist: ubuntu
        flavor: focal
        install: libfeelpp1 feelpp-tools libfeelpp-dev libfeelpp-toolboxes1-all-dev feelpp-toolboxes
    - name: Download 
      uses: actions/download-artifact@v2
      with:
        # Artifact name
        name: feelpp-project-artifacts
        # Directory containing files to upload
        path: build/assets/
    - name: Display Artifact
      run: ls -R
      working-directory: build/assets
    - name: Install Project
      run: sudo dpkg -i build/assets/*.deb

  deliver:
    runs-on: ubuntu-20.04
    needs: check
    name: Docker Build, Tag, Push

    steps:
    - uses: actions/checkout@v2.3.4
      with:
        lfs: true
    
    - name: Download 
      uses: actions/download-artifact@v2
      with:
        # Artifact name
        name: feelpp-project-artifacts
        path: artifacts/
    -
      name: Set up QEMU
      uses: docker/setup-qemu-action@v1.1.0
    -
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1.3.0        
    - 
      name: Login to GitHub Container Registry
      uses: docker/login-action@v1.9.0 
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.CR_PAT }}
    - 
      name: Build container image
      uses: docker/build-push-action@v2
      with: 
        context: artifacts
        repository: feelpp/feelpp-project
        tags: ghcr.io/feelpp/feelpp-project:latest
        file: ./Dockerfile
        push: true
        
