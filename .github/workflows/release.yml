name: release

on:
  push:
    tags:
      - '[0-9].[0-9].[0-9]*'

jobs:

  create-release-artifacts:
    runs-on: self-ubuntu-22.04

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          lfs: true
          submodules: 'recursive'
        
      - name: Build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CHANGELOG_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cmake --preset default
          cmake --build --preset default 
          cmake --build --preset default -t package

      - name: Create Github Release
        id: create_release
        uses: actions/create-release@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload release files on Github
        uses: svenstaro/upload-release-action@v1-release
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: build/default/assets/myproject*
          tag: ${{ github.ref }}
          file_glob: true

      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ghcr.io/feelpp/feelpp-project
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1.1.0
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1.3.0        
      - 
        name: Login to GitHub Container Registry
        uses: docker/login-action@v1.9.0 
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}
      - 
        name: Build container image
        uses: docker/build-push-action@v4
        with: 
          context: build/default/assets/
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          file: ./Dockerfile    